[
    { "name": "def", "description": "Define a function", "context": "Statement" },
    { "name": "class", "description": "Define a class", "context": "Statement" },
    { "name": "if", "description": "Conditional statement", "context": "Statement" },
    { "name": "elif", "description": "Else if clause", "context": "Statement" },
    { "name": "else", "description": "Else clause", "context": "Statement" },
    { "name": "for", "description": "For loop", "context": "Statement" },
    { "name": "while", "description": "While loop", "context": "Statement" },
    { "name": "try", "description": "Try-except block", "context": "Statement" },
    { "name": "except", "description": "Exception handler", "context": "Statement" },
    { "name": "finally", "description": "Finally clause", "context": "Statement" },
    { "name": "with", "description": "Context manager", "context": "Statement" },
    { "name": "return", "description": "Return from function", "context": "Statement" },
    { "name": "yield", "description": "Yield value from generator", "context": "Statement" },
    { "name": "raise", "description": "Raise an exception", "context": "Statement" },
    { "name": "pass", "description": "Null operation", "context": "Statement" },
    { "name": "break", "description": "Break out of loop", "context": "Statement" },
    { "name": "continue", "description": "Continue to next iteration", "context": "Statement" },
    { "name": "import", "description": "Import a module", "context": "Statement" },
    { "name": "from", "description": "Import from a module", "context": "Statement" },
    { "name": "as", "description": "Alias in import or context manager", "context": "Statement" },
    { "name": "async", "description": "Define async function", "context": "Statement" },
    { "name": "await", "description": "Await async operation", "context": "Expression" },
    { "name": "assert", "description": "Assert condition", "context": "Statement" },
    { "name": "del", "description": "Delete reference", "context": "Statement" },
    { "name": "global", "description": "Declare global variable", "context": "Statement" },
    { "name": "nonlocal", "description": "Declare nonlocal variable", "context": "Statement" },
    { "name": "match", "description": "Pattern matching (Python 3.10+)", "context": "Statement" },
    { "name": "case", "description": "Match case clause", "context": "Statement" },
    { "name": "lambda", "description": "Anonymous function", "context": "Expression" },
    { "name": "and", "description": "Logical AND", "context": "Expression" },
    { "name": "or", "description": "Logical OR", "context": "Expression" },
    { "name": "not", "description": "Logical NOT", "context": "Expression" },
    { "name": "in", "description": "Membership test", "context": "Expression" },
    { "name": "is", "description": "Identity test", "context": "Expression" },
    { "name": "None", "description": "Null value", "context": "Both" },
    { "name": "True", "description": "Boolean true", "context": "Both" },
    { "name": "False", "description": "Boolean false", "context": "Both" }
]
